// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Moment
// swift-module-flags-ignorable: -enable-experimental-feature AccessLevelOnImport -enable-bare-slash-regex
import Combine
import CoreFoundation
import CryptoKit
import Darwin
import Foundation
import MachO
@_exported import Moment
import Network
import NetworkExtension
import OSLog
import Security
import Swift
import SwiftUI
import UIKit
import UserNotifications
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol CashbackViewControllerDelegate : AnyObject {
  func cashbackViewControllerDidFinish(_ viewController: Moment.CashbackViewController)
  func cashbackViewController(_ viewController: Moment.CashbackViewController, didFailWithError error: Moment.CashbackError)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CashbackViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) weak public var delegate: (any Moment.CashbackViewControllerDelegate)?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class MomentCashbackService : Swift.Sendable {
  public static let shared: Moment.MomentCashbackService
  public static func setUserId(_ userId: Swift.String)
  @objc deinit
}
public enum CashbackError : Swift.Error {
  case userIdNotFound
  case initializationError(any Swift.Error)
}
extension Moment.CashbackError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_hasMissingDesignatedInitializers public class MomentConstants {
  public static let notificationKey: Swift.String
  @objc deinit
}
